/*
 * 005button_interrupt.c
 *
 *  Created on: Feb 11, 2025
 *      Author: Rambo
 */

#include <string.h>
#include "stm32f4xx.h"
#include "stm32f407xx_gpio_driver.h"

#define HIGH 1
#define LOW  0
#define BTN_PRESSED LOW

// Hàm delay khoảng 200ms (với clock hệ thống 16MHz)
void delay(void)
{
    for(uint32_t i = 0; i < (500000 / 2); i++);
}

int main(void)
{
    GPIO_Handle_t GpioLed, GPIOBtn;

    // Khởi tạo toàn bộ các trường của cấu trúc về 0 để tránh giá trị rác
    memset(&GpioLed, 0, sizeof(GpioLed));
    memset(&GPIOBtn, 0, sizeof(GPIOBtn));

    /*------------------------- Cấu hình LED -------------------------*/
    // Sử dụng chân PD12 để điều khiển LED
    GpioLed.pGPIOx                              = GPIOD;                   // Chọn cổng D
    GpioLed.GPIO_PinConfig.GPIO_PinNumber       = GPIO_PIN_NO_12;          // Chọn chân số 12
    GpioLed.GPIO_PinConfig.GPIO_PinMode         = GPIO_MODE_OUT;           // Chế độ output
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed        = GPIO_SPEED_LOW;          // Tốc độ chuyển mạch thấp
    GpioLed.GPIO_PinConfig.GPIO_PinOPType       = GPIO_OP_TYPE_PP;         // Kiểu output push-pull
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl  = GPIO_NO_PUPD;            // Không sử dụng pull-up hay pull-down

    // Kích hoạt clock cho cổng GPIOD
    GPIO_PeriClockControl(GPIOD, ENABLE);
    // Khởi tạo LED theo cấu hình đã thiết lập
    GPIO_Init(&GpioLed);

    /*------------------------ Cấu hình Button làm ngắt ------------------------*/
    // Sử dụng chân PA0 làm nút nhấn ngắt
    GPIOBtn.pGPIOx                              = GPIOA;                   // Chọn cổng A
    GPIOBtn.GPIO_PinConfig.GPIO_PinNumber       = GPIO_PIN_NO_0;           // Chọn chân số 0
    // Ở đây, thay vì chỉ cấu hình input thông thường, ta chuyển sang chế độ interrupt
    // Sử dụng chế độ ngắt theo cạnh sụt (falling edge) để nhận biết khi nút được nhấn
    GPIOBtn.GPIO_PinConfig.GPIO_PinMode         = GPIO_MODE_IT_FT;         // Interrupt Falling Edge
    GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed        = GPIO_SPEED_FAST;         // Tốc độ chuyển mạch nhanh (không ảnh hưởng nhiều đối với input)
    // Sử dụng pull-up để đảm bảo chân ở mức HIGH khi không nhấn nút; khi nhấn, nút kéo xuống (LOW)
    GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl  = GPIO_PIN_PU;

    // Kích hoạt clock cho cổng GPIOA
    GPIO_PeriClockControl(GPIOA, ENABLE);
    // Khởi tạo nút bấm theo cấu hình đã thiết lập
    GPIO_Init(&GPIOBtn);

    // Đặt trạng thái ban đầu cho LED (tắt LED)
    GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, GPIO_PIN_RESET);

    /*------------------------ Cấu hình NVIC cho ngắt ------------------------*/
    // Ở đây, ngắt từ chân PA0 sẽ được ánh xạ qua EXTI0, do đó:
    // - Cấu hình độ ưu tiên (ở đây sử dụng mức ưu tiên thấp nhất, ví dụ NVIC_IRQ_PRI15)
    // - Cho phép ngắt EXTI0
    GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
    GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);

    while(1);  // Vòng lặp vô hạn, CPU sẽ chuyển sang ISR khi có ngắt xảy ra

    return 0;
}

/*------------------------ Interrupt Service Routine ------------------------*/
// ISR xử lý ngắt EXTI0 (dành cho chân PA0)
void EXTI0_IRQHandler(void)
{
    // Xóa cờ pending của ngắt EXTI line 0
    GPIO_IRQHandling(GPIO_PIN_NO_0);
    // Toggle LED trên PD12
    GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
    // (Có thể thêm delay để debounce nút nhấn nếu cần)
    delay();
}
