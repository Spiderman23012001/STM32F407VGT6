/*
 * stm32f407xx_gpio_driver.c
 *
 *  Created on: Feb 8, 2025
 *      Author: Rambo
 */

#include "stm32f407xx_gpio_driver.h"

/*
 * Peripheral clock setup
 */

/**
 * @brief  Controls the clock for the GPIO peripheral.
 * @param  pGPIOx: Base address of GPIO (e.g., GPIOA).
 * @param  EnOrDi: ENABLE (1) to turn on, DISABLE (0) to turn off.
 * @retval None.
 * @note   This function must be called before configuring the GPIO registers.
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *GPIOx, uint8_t EnOrDi) 
{
    if(EnOrDi)
}


/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle);
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx);

/*
 * Data Read and Write
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx);
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value);
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);

/*
 *  IRQ config and ISR Handling
 */
void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t IRQPriority, uint8_t EnorDi);
void GPIO_IRQHandling(uint8_t PinNumber);


