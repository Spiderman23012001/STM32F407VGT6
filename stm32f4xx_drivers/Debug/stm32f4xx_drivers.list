
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008bc  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a44  08000a4c  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a44  08000a44  00001a4c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a44  08000a44  00001a4c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a44  08000a4c  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a44  08000a44  00001a44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a48  08000a48  00001a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001a4c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001a4c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a8a  00000000  00000000  00001a7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002e0  00000000  00000000  00002506  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000027e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  000028b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000026f0  00000000  00000000  0000293c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001297  00000000  00000000  0000502c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000a306  00000000  00000000  000062c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000105c9  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0001060c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000058  00000000  00000000  00010894  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000a2c 	.word	0x08000a2c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000a2c 	.word	0x08000a2c

080001c8 <main>:
{
    for(uint32_t i = 0; i < (500000 ); i++);
}
uint8_t s;
int main(void)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b086      	sub	sp, #24
 80001cc:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed, GPIOBtn;

    // Khởi tạo biến cấu trúc về 0 để tránh giá trị rác
    memset(&GpioLed, 0, sizeof(GpioLed));
 80001ce:	f107 030c 	add.w	r3, r7, #12
 80001d2:	220c      	movs	r2, #12
 80001d4:	2100      	movs	r1, #0
 80001d6:	4618      	mov	r0, r3
 80001d8:	f000 fbfc 	bl	80009d4 <memset>
    memset(&GPIOBtn, 0, sizeof(GPIOBtn));
 80001dc:	463b      	mov	r3, r7
 80001de:	220c      	movs	r2, #12
 80001e0:	2100      	movs	r1, #0
 80001e2:	4618      	mov	r0, r3
 80001e4:	f000 fbf6 	bl	80009d4 <memset>

    /*------------------------- Cấu hình LED -------------------------*/
    GpioLed.pGPIOx = GPIOD;
 80001e8:	4b1a      	ldr	r3, [pc, #104]	@ (8000254 <main+0x8c>)
 80001ea:	60fb      	str	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber       = GPIO_PIN_NO_12;
 80001ec:	230c      	movs	r3, #12
 80001ee:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode         = GPIO_MODE_OUT;
 80001f0:	2301      	movs	r3, #1
 80001f2:	747b      	strb	r3, [r7, #17]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed        = GPIO_SPEED_LOW;
 80001f4:	2300      	movs	r3, #0
 80001f6:	74bb      	strb	r3, [r7, #18]
    GpioLed.GPIO_PinConfig.GPIO_PinOPType       = GPIO_OP_TYPE_PP;
 80001f8:	2300      	movs	r3, #0
 80001fa:	753b      	strb	r3, [r7, #20]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl  = GPIO_NO_PUPD;
 80001fc:	2300      	movs	r3, #0
 80001fe:	74fb      	strb	r3, [r7, #19]

    GPIO_PeriClockControl(GPIOD, ENABLE);
 8000200:	2101      	movs	r1, #1
 8000202:	4814      	ldr	r0, [pc, #80]	@ (8000254 <main+0x8c>)
 8000204:	f000 f860 	bl	80002c8 <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed);
 8000208:	f107 030c 	add.w	r3, r7, #12
 800020c:	4618      	mov	r0, r3
 800020e:	f000 f943 	bl	8000498 <GPIO_Init>

    /*------------------------ Cấu hình Button làm ngắt ------------------------*/
    GPIOBtn.pGPIOx = GPIOD;
 8000212:	4b10      	ldr	r3, [pc, #64]	@ (8000254 <main+0x8c>)
 8000214:	603b      	str	r3, [r7, #0]
    GPIOBtn.GPIO_PinConfig.GPIO_PinNumber       = GPIO_PIN_NO_5;
 8000216:	2305      	movs	r3, #5
 8000218:	713b      	strb	r3, [r7, #4]
    GPIOBtn.GPIO_PinConfig.GPIO_PinMode         = GPIO_MODE_IT_FT;
 800021a:	2304      	movs	r3, #4
 800021c:	717b      	strb	r3, [r7, #5]
    GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed        = GPIO_SPEED_FAST;
 800021e:	2302      	movs	r3, #2
 8000220:	71bb      	strb	r3, [r7, #6]
    GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl  = GPIO_PIN_PU;
 8000222:	2301      	movs	r3, #1
 8000224:	71fb      	strb	r3, [r7, #7]

    GPIO_PeriClockControl(GPIOD, ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	480a      	ldr	r0, [pc, #40]	@ (8000254 <main+0x8c>)
 800022a:	f000 f84d 	bl	80002c8 <GPIO_PeriClockControl>

    GPIO_Init(&GPIOBtn);
 800022e:	463b      	mov	r3, r7
 8000230:	4618      	mov	r0, r3
 8000232:	f000 f931 	bl	8000498 <GPIO_Init>


    GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, RESET);
 8000236:	2200      	movs	r2, #0
 8000238:	210c      	movs	r1, #12
 800023a:	4806      	ldr	r0, [pc, #24]	@ (8000254 <main+0x8c>)
 800023c:	f000 fac0 	bl	80007c0 <GPIO_WriteToOutputPin>

    /*------------------------ Cấu hình NVIC cho ngắt ------------------------*/

    GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_IRQ_PRI15);
 8000240:	210f      	movs	r1, #15
 8000242:	2017      	movs	r0, #23
 8000244:	f000 fb7c 	bl	8000940 <GPIO_IRQPriorityConfig>
    GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5, ENABLE);
 8000248:	2101      	movs	r1, #1
 800024a:	2017      	movs	r0, #23
 800024c:	f000 faf2 	bl	8000834 <GPIO_IRQInterruptConfig>

    while(1);
 8000250:	bf00      	nop
 8000252:	e7fd      	b.n	8000250 <main+0x88>
 8000254:	40020c00 	.word	0x40020c00

08000258 <EXTI9_5_IRQHandler>:
}

/*------------------------ Interrupt Service Routine ------------------------*/
// ISR xử lý ngắt EXTI cho các chân từ 5 đến 9, trong đó PD5 thuộc nhóm này.
void EXTI9_5_IRQHandler(void)
{
 8000258:	b580      	push	{r7, lr}
 800025a:	af00      	add	r7, sp, #0
    // Xóa cờ pending của ngắt EXTI liên quan đến PD5
    GPIO_IRQHandling(GPIO_PIN_NO_5);
 800025c:	2005      	movs	r0, #5
 800025e:	f000 fb99 	bl	8000994 <GPIO_IRQHandling>
    // Toggle LED nối với PD12
    GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000262:	210c      	movs	r1, #12
 8000264:	4802      	ldr	r0, [pc, #8]	@ (8000270 <EXTI9_5_IRQHandler+0x18>)
 8000266:	f000 fad0 	bl	800080a <GPIO_ToggleOutputPin>
//    delay();  // (Có thể thêm delay để debounce nút nhấn)
}
 800026a:	bf00      	nop
 800026c:	bd80      	pop	{r7, pc}
 800026e:	bf00      	nop
 8000270:	40020c00 	.word	0x40020c00

08000274 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000274:	480d      	ldr	r0, [pc, #52]	@ (80002ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000276:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000278:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800027c:	480c      	ldr	r0, [pc, #48]	@ (80002b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800027e:	490d      	ldr	r1, [pc, #52]	@ (80002b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000280:	4a0d      	ldr	r2, [pc, #52]	@ (80002b8 <LoopForever+0xe>)
  movs r3, #0
 8000282:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000284:	e002      	b.n	800028c <LoopCopyDataInit>

08000286 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000286:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000288:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028a:	3304      	adds	r3, #4

0800028c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800028c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000290:	d3f9      	bcc.n	8000286 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000292:	4a0a      	ldr	r2, [pc, #40]	@ (80002bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000294:	4c0a      	ldr	r4, [pc, #40]	@ (80002c0 <LoopForever+0x16>)
  movs r3, #0
 8000296:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000298:	e001      	b.n	800029e <LoopFillZerobss>

0800029a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800029c:	3204      	adds	r2, #4

0800029e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a0:	d3fb      	bcc.n	800029a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002a2:	f000 fb9f 	bl	80009e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a6:	f7ff ff8f 	bl	80001c8 <main>

080002aa <LoopForever>:

LoopForever:
  b LoopForever
 80002aa:	e7fe      	b.n	80002aa <LoopForever>
  ldr   r0, =_estack
 80002ac:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b8:	08000a4c 	.word	0x08000a4c
  ldr r2, =_sbss
 80002bc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c0:	2000001c 	.word	0x2000001c

080002c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c4:	e7fe      	b.n	80002c4 <ADC_IRQHandler>
	...

080002c8 <GPIO_PeriClockControl>:
 * @retval None.
 * @note   This function must be called before configuring the GPIO registers.
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 80002c8:	b480      	push	{r7}
 80002ca:	b083      	sub	sp, #12
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
 80002d0:	460b      	mov	r3, r1
 80002d2:	70fb      	strb	r3, [r7, #3]
    if(EnOrDi == ENABLE)
 80002d4:	78fb      	ldrb	r3, [r7, #3]
 80002d6:	2b01      	cmp	r3, #1
 80002d8:	d162      	bne.n	80003a0 <GPIO_PeriClockControl+0xd8>
    {
    	if(pGPIOx == GPIOA)
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	4a64      	ldr	r2, [pc, #400]	@ (8000470 <GPIO_PeriClockControl+0x1a8>)
 80002de:	4293      	cmp	r3, r2
 80002e0:	d106      	bne.n	80002f0 <GPIO_PeriClockControl+0x28>
    	{
    		GPIOA_PCLK_EN();
 80002e2:	4b64      	ldr	r3, [pc, #400]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80002e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e6:	4a63      	ldr	r2, [pc, #396]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80002e8:	f043 0301 	orr.w	r3, r3, #1
 80002ec:	6313      	str	r3, [r2, #48]	@ 0x30
        {
            GPIOI_PCLK_DI();
        }

    }
}
 80002ee:	e0b9      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOB)
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	4a61      	ldr	r2, [pc, #388]	@ (8000478 <GPIO_PeriClockControl+0x1b0>)
 80002f4:	4293      	cmp	r3, r2
 80002f6:	d106      	bne.n	8000306 <GPIO_PeriClockControl+0x3e>
    		GPIOB_PCLK_EN();
 80002f8:	4b5e      	ldr	r3, [pc, #376]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80002fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002fc:	4a5d      	ldr	r2, [pc, #372]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80002fe:	f043 0302 	orr.w	r3, r3, #2
 8000302:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000304:	e0ae      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOC)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a5c      	ldr	r2, [pc, #368]	@ (800047c <GPIO_PeriClockControl+0x1b4>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d106      	bne.n	800031c <GPIO_PeriClockControl+0x54>
    		GPIOC_PCLK_EN();
 800030e:	4b59      	ldr	r3, [pc, #356]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000310:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000312:	4a58      	ldr	r2, [pc, #352]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000314:	f043 0304 	orr.w	r3, r3, #4
 8000318:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800031a:	e0a3      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOD)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a58      	ldr	r2, [pc, #352]	@ (8000480 <GPIO_PeriClockControl+0x1b8>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <GPIO_PeriClockControl+0x6a>
    		GPIOD_PCLK_EN();
 8000324:	4b53      	ldr	r3, [pc, #332]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000326:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000328:	4a52      	ldr	r2, [pc, #328]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800032a:	f043 0308 	orr.w	r3, r3, #8
 800032e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000330:	e098      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOE)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a53      	ldr	r2, [pc, #332]	@ (8000484 <GPIO_PeriClockControl+0x1bc>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <GPIO_PeriClockControl+0x80>
    		GPIOE_PCLK_EN();
 800033a:	4b4e      	ldr	r3, [pc, #312]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800033e:	4a4d      	ldr	r2, [pc, #308]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000340:	f043 0310 	orr.w	r3, r3, #16
 8000344:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000346:	e08d      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOF)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a4f      	ldr	r2, [pc, #316]	@ (8000488 <GPIO_PeriClockControl+0x1c0>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <GPIO_PeriClockControl+0x96>
    		GPIOF_PCLK_EN();
 8000350:	4b48      	ldr	r3, [pc, #288]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000352:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000354:	4a47      	ldr	r2, [pc, #284]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000356:	f043 0320 	orr.w	r3, r3, #32
 800035a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800035c:	e082      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOG)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a4a      	ldr	r2, [pc, #296]	@ (800048c <GPIO_PeriClockControl+0x1c4>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <GPIO_PeriClockControl+0xac>
    		GPIOG_PCLK_EN();
 8000366:	4b43      	ldr	r3, [pc, #268]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036a:	4a42      	ldr	r2, [pc, #264]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800036c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000370:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000372:	e077      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOH)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a46      	ldr	r2, [pc, #280]	@ (8000490 <GPIO_PeriClockControl+0x1c8>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <GPIO_PeriClockControl+0xc2>
    		GPIOH_PCLK_EN();
 800037c:	4b3d      	ldr	r3, [pc, #244]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800037e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000380:	4a3c      	ldr	r2, [pc, #240]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000382:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000386:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000388:	e06c      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
    	}else if(pGPIOx == GPIOI)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a41      	ldr	r2, [pc, #260]	@ (8000494 <GPIO_PeriClockControl+0x1cc>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d168      	bne.n	8000464 <GPIO_PeriClockControl+0x19c>
    		GPIOI_PCLK_EN();
 8000392:	4b38      	ldr	r3, [pc, #224]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000394:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000396:	4a37      	ldr	r2, [pc, #220]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000398:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800039c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800039e:	e061      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        if(pGPIOx == GPIOA)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a33      	ldr	r2, [pc, #204]	@ (8000470 <GPIO_PeriClockControl+0x1a8>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <GPIO_PeriClockControl+0xee>
            GPIOA_PCLK_DI();
 80003a8:	4b32      	ldr	r3, [pc, #200]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ac:	4a31      	ldr	r2, [pc, #196]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003ae:	f023 0301 	bic.w	r3, r3, #1
 80003b2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b4:	e056      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOB)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a2f      	ldr	r2, [pc, #188]	@ (8000478 <GPIO_PeriClockControl+0x1b0>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <GPIO_PeriClockControl+0x104>
            GPIOB_PCLK_DI();
 80003be:	4b2d      	ldr	r3, [pc, #180]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c2:	4a2c      	ldr	r2, [pc, #176]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003c4:	f023 0302 	bic.w	r3, r3, #2
 80003c8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ca:	e04b      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOC)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a2b      	ldr	r2, [pc, #172]	@ (800047c <GPIO_PeriClockControl+0x1b4>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_PeriClockControl+0x11a>
            GPIOC_PCLK_DI();
 80003d4:	4b27      	ldr	r3, [pc, #156]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d8:	4a26      	ldr	r2, [pc, #152]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003da:	f023 0304 	bic.w	r3, r3, #4
 80003de:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e0:	e040      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOD)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a26      	ldr	r2, [pc, #152]	@ (8000480 <GPIO_PeriClockControl+0x1b8>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_PeriClockControl+0x130>
            GPIOD_PCLK_DI();
 80003ea:	4b22      	ldr	r3, [pc, #136]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ee:	4a21      	ldr	r2, [pc, #132]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 80003f0:	f023 0308 	bic.w	r3, r3, #8
 80003f4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f6:	e035      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOE)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a22      	ldr	r2, [pc, #136]	@ (8000484 <GPIO_PeriClockControl+0x1bc>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_PeriClockControl+0x146>
            GPIOE_PCLK_DI();
 8000400:	4b1c      	ldr	r3, [pc, #112]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000402:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000404:	4a1b      	ldr	r2, [pc, #108]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000406:	f023 0310 	bic.w	r3, r3, #16
 800040a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800040c:	e02a      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOF)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a1d      	ldr	r2, [pc, #116]	@ (8000488 <GPIO_PeriClockControl+0x1c0>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_PeriClockControl+0x15c>
            GPIOF_PCLK_DI();
 8000416:	4b17      	ldr	r3, [pc, #92]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000418:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800041a:	4a16      	ldr	r2, [pc, #88]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800041c:	f023 0320 	bic.w	r3, r3, #32
 8000420:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000422:	e01f      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOG)
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a19      	ldr	r2, [pc, #100]	@ (800048c <GPIO_PeriClockControl+0x1c4>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <GPIO_PeriClockControl+0x172>
            GPIOG_PCLK_DI();
 800042c:	4b11      	ldr	r3, [pc, #68]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000430:	4a10      	ldr	r2, [pc, #64]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000432:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000436:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000438:	e014      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOH)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a14      	ldr	r2, [pc, #80]	@ (8000490 <GPIO_PeriClockControl+0x1c8>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <GPIO_PeriClockControl+0x188>
            GPIOH_PCLK_DI();
 8000442:	4b0c      	ldr	r3, [pc, #48]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000444:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000446:	4a0b      	ldr	r2, [pc, #44]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 8000448:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800044c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800044e:	e009      	b.n	8000464 <GPIO_PeriClockControl+0x19c>
        }else if(pGPIOx == GPIOI)
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a10      	ldr	r2, [pc, #64]	@ (8000494 <GPIO_PeriClockControl+0x1cc>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d105      	bne.n	8000464 <GPIO_PeriClockControl+0x19c>
            GPIOI_PCLK_DI();
 8000458:	4b06      	ldr	r3, [pc, #24]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800045c:	4a05      	ldr	r2, [pc, #20]	@ (8000474 <GPIO_PeriClockControl+0x1ac>)
 800045e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000462:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000464:	bf00      	nop
 8000466:	370c      	adds	r7, #12
 8000468:	46bd      	mov	sp, r7
 800046a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046e:	4770      	bx	lr
 8000470:	40020000 	.word	0x40020000
 8000474:	40023800 	.word	0x40023800
 8000478:	40020400 	.word	0x40020400
 800047c:	40020800 	.word	0x40020800
 8000480:	40020c00 	.word	0x40020c00
 8000484:	40021000 	.word	0x40021000
 8000488:	40021400 	.word	0x40021400
 800048c:	40021800 	.word	0x40021800
 8000490:	40021c00 	.word	0x40021c00
 8000494:	40022000 	.word	0x40022000

08000498 <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000498:	b480      	push	{r7}
 800049a:	b087      	sub	sp, #28
 800049c:	af00      	add	r7, sp, #0
 800049e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80004a0:	2300      	movs	r3, #0
 80004a2:	617b      	str	r3, [r7, #20]
    //1. config the mode of gpio pin
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	795b      	ldrb	r3, [r3, #5]
 80004a8:	2b03      	cmp	r3, #3
 80004aa:	d81f      	bhi.n	80004ec <GPIO_Init+0x54>
    {
    	// the non interrupt
    	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	795b      	ldrb	r3, [r3, #5]
 80004b0:	461a      	mov	r2, r3
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	791b      	ldrb	r3, [r3, #4]
 80004b6:	005b      	lsls	r3, r3, #1
 80004b8:	fa02 f303 	lsl.w	r3, r2, r3
 80004bc:	617b      	str	r3, [r7, #20]
    	pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	681a      	ldr	r2, [r3, #0]
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	791b      	ldrb	r3, [r3, #4]
 80004c8:	4619      	mov	r1, r3
 80004ca:	2303      	movs	r3, #3
 80004cc:	408b      	lsls	r3, r1
 80004ce:	43db      	mvns	r3, r3
 80004d0:	4619      	mov	r1, r3
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	400a      	ands	r2, r1
 80004d8:	601a      	str	r2, [r3, #0]
    	pGPIOHandle->pGPIOx->MODER |= temp;
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	6819      	ldr	r1, [r3, #0]
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	697a      	ldr	r2, [r7, #20]
 80004e6:	430a      	orrs	r2, r1
 80004e8:	601a      	str	r2, [r3, #0]
 80004ea:	e0c2      	b.n	8000672 <GPIO_Init+0x1da>
    }else
    {
    	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	795b      	ldrb	r3, [r3, #5]
 80004f0:	2b04      	cmp	r3, #4
 80004f2:	d117      	bne.n	8000524 <GPIO_Init+0x8c>
    	{
    		//1. config the FTSR
    		EXTI->FTSR	|= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f4:	4b47      	ldr	r3, [pc, #284]	@ (8000614 <GPIO_Init+0x17c>)
 80004f6:	68db      	ldr	r3, [r3, #12]
 80004f8:	687a      	ldr	r2, [r7, #4]
 80004fa:	7912      	ldrb	r2, [r2, #4]
 80004fc:	4611      	mov	r1, r2
 80004fe:	2201      	movs	r2, #1
 8000500:	408a      	lsls	r2, r1
 8000502:	4611      	mov	r1, r2
 8000504:	4a43      	ldr	r2, [pc, #268]	@ (8000614 <GPIO_Init+0x17c>)
 8000506:	430b      	orrs	r3, r1
 8000508:	60d3      	str	r3, [r2, #12]
    		// Clear the responding RTSR bit
    		EXTI->RTSR	&= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050a:	4b42      	ldr	r3, [pc, #264]	@ (8000614 <GPIO_Init+0x17c>)
 800050c:	689b      	ldr	r3, [r3, #8]
 800050e:	687a      	ldr	r2, [r7, #4]
 8000510:	7912      	ldrb	r2, [r2, #4]
 8000512:	4611      	mov	r1, r2
 8000514:	2201      	movs	r2, #1
 8000516:	408a      	lsls	r2, r1
 8000518:	43d2      	mvns	r2, r2
 800051a:	4611      	mov	r1, r2
 800051c:	4a3d      	ldr	r2, [pc, #244]	@ (8000614 <GPIO_Init+0x17c>)
 800051e:	400b      	ands	r3, r1
 8000520:	6093      	str	r3, [r2, #8]
 8000522:	e035      	b.n	8000590 <GPIO_Init+0xf8>
    	}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	795b      	ldrb	r3, [r3, #5]
 8000528:	2b05      	cmp	r3, #5
 800052a:	d117      	bne.n	800055c <GPIO_Init+0xc4>
    	{
    		//1. config the RTSR
			EXTI->RTSR	|= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052c:	4b39      	ldr	r3, [pc, #228]	@ (8000614 <GPIO_Init+0x17c>)
 800052e:	689b      	ldr	r3, [r3, #8]
 8000530:	687a      	ldr	r2, [r7, #4]
 8000532:	7912      	ldrb	r2, [r2, #4]
 8000534:	4611      	mov	r1, r2
 8000536:	2201      	movs	r2, #1
 8000538:	408a      	lsls	r2, r1
 800053a:	4611      	mov	r1, r2
 800053c:	4a35      	ldr	r2, [pc, #212]	@ (8000614 <GPIO_Init+0x17c>)
 800053e:	430b      	orrs	r3, r1
 8000540:	6093      	str	r3, [r2, #8]
			// Clear the responding RTSR bit
			EXTI->FTSR	&= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000542:	4b34      	ldr	r3, [pc, #208]	@ (8000614 <GPIO_Init+0x17c>)
 8000544:	68db      	ldr	r3, [r3, #12]
 8000546:	687a      	ldr	r2, [r7, #4]
 8000548:	7912      	ldrb	r2, [r2, #4]
 800054a:	4611      	mov	r1, r2
 800054c:	2201      	movs	r2, #1
 800054e:	408a      	lsls	r2, r1
 8000550:	43d2      	mvns	r2, r2
 8000552:	4611      	mov	r1, r2
 8000554:	4a2f      	ldr	r2, [pc, #188]	@ (8000614 <GPIO_Init+0x17c>)
 8000556:	400b      	ands	r3, r1
 8000558:	60d3      	str	r3, [r2, #12]
 800055a:	e019      	b.n	8000590 <GPIO_Init+0xf8>
    	}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	795b      	ldrb	r3, [r3, #5]
 8000560:	2b06      	cmp	r3, #6
 8000562:	d115      	bne.n	8000590 <GPIO_Init+0xf8>
    	{
    		//1. config the RTSR and FTSR
			EXTI->RTSR	|= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000564:	4b2b      	ldr	r3, [pc, #172]	@ (8000614 <GPIO_Init+0x17c>)
 8000566:	689b      	ldr	r3, [r3, #8]
 8000568:	687a      	ldr	r2, [r7, #4]
 800056a:	7912      	ldrb	r2, [r2, #4]
 800056c:	4611      	mov	r1, r2
 800056e:	2201      	movs	r2, #1
 8000570:	408a      	lsls	r2, r1
 8000572:	4611      	mov	r1, r2
 8000574:	4a27      	ldr	r2, [pc, #156]	@ (8000614 <GPIO_Init+0x17c>)
 8000576:	430b      	orrs	r3, r1
 8000578:	6093      	str	r3, [r2, #8]
			EXTI->FTSR	|= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	4b26      	ldr	r3, [pc, #152]	@ (8000614 <GPIO_Init+0x17c>)
 800057c:	68db      	ldr	r3, [r3, #12]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	7912      	ldrb	r2, [r2, #4]
 8000582:	4611      	mov	r1, r2
 8000584:	2201      	movs	r2, #1
 8000586:	408a      	lsls	r2, r1
 8000588:	4611      	mov	r1, r2
 800058a:	4a22      	ldr	r2, [pc, #136]	@ (8000614 <GPIO_Init+0x17c>)
 800058c:	430b      	orrs	r3, r1
 800058e:	60d3      	str	r3, [r2, #12]
    	}

    	//2. config the gpio port selection in SYSCFG_EXTICR
    	uint8_t tem1,tem2;
    	tem1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	089b      	lsrs	r3, r3, #2
 8000596:	74fb      	strb	r3, [r7, #19]
    	tem2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	791b      	ldrb	r3, [r3, #4]
 800059c:	f003 0303 	and.w	r3, r3, #3
 80005a0:	74bb      	strb	r3, [r7, #18]
    	uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	4a1c      	ldr	r2, [pc, #112]	@ (8000618 <GPIO_Init+0x180>)
 80005a8:	4293      	cmp	r3, r2
 80005aa:	d045      	beq.n	8000638 <GPIO_Init+0x1a0>
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	4a1a      	ldr	r2, [pc, #104]	@ (800061c <GPIO_Init+0x184>)
 80005b2:	4293      	cmp	r3, r2
 80005b4:	d02b      	beq.n	800060e <GPIO_Init+0x176>
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	4a19      	ldr	r2, [pc, #100]	@ (8000620 <GPIO_Init+0x188>)
 80005bc:	4293      	cmp	r3, r2
 80005be:	d024      	beq.n	800060a <GPIO_Init+0x172>
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	4a17      	ldr	r2, [pc, #92]	@ (8000624 <GPIO_Init+0x18c>)
 80005c6:	4293      	cmp	r3, r2
 80005c8:	d01d      	beq.n	8000606 <GPIO_Init+0x16e>
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	4a16      	ldr	r2, [pc, #88]	@ (8000628 <GPIO_Init+0x190>)
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d016      	beq.n	8000602 <GPIO_Init+0x16a>
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	4a14      	ldr	r2, [pc, #80]	@ (800062c <GPIO_Init+0x194>)
 80005da:	4293      	cmp	r3, r2
 80005dc:	d00f      	beq.n	80005fe <GPIO_Init+0x166>
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	4a13      	ldr	r2, [pc, #76]	@ (8000630 <GPIO_Init+0x198>)
 80005e4:	4293      	cmp	r3, r2
 80005e6:	d008      	beq.n	80005fa <GPIO_Init+0x162>
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	4a11      	ldr	r2, [pc, #68]	@ (8000634 <GPIO_Init+0x19c>)
 80005ee:	4293      	cmp	r3, r2
 80005f0:	d101      	bne.n	80005f6 <GPIO_Init+0x15e>
 80005f2:	2307      	movs	r3, #7
 80005f4:	e021      	b.n	800063a <GPIO_Init+0x1a2>
 80005f6:	2300      	movs	r3, #0
 80005f8:	e01f      	b.n	800063a <GPIO_Init+0x1a2>
 80005fa:	2306      	movs	r3, #6
 80005fc:	e01d      	b.n	800063a <GPIO_Init+0x1a2>
 80005fe:	2305      	movs	r3, #5
 8000600:	e01b      	b.n	800063a <GPIO_Init+0x1a2>
 8000602:	2304      	movs	r3, #4
 8000604:	e019      	b.n	800063a <GPIO_Init+0x1a2>
 8000606:	2303      	movs	r3, #3
 8000608:	e017      	b.n	800063a <GPIO_Init+0x1a2>
 800060a:	2302      	movs	r3, #2
 800060c:	e015      	b.n	800063a <GPIO_Init+0x1a2>
 800060e:	2301      	movs	r3, #1
 8000610:	e013      	b.n	800063a <GPIO_Init+0x1a2>
 8000612:	bf00      	nop
 8000614:	40013c00 	.word	0x40013c00
 8000618:	40020000 	.word	0x40020000
 800061c:	40020400 	.word	0x40020400
 8000620:	40020800 	.word	0x40020800
 8000624:	40020c00 	.word	0x40020c00
 8000628:	40021000 	.word	0x40021000
 800062c:	40021400 	.word	0x40021400
 8000630:	40021800 	.word	0x40021800
 8000634:	40021c00 	.word	0x40021c00
 8000638:	2300      	movs	r3, #0
 800063a:	747b      	strb	r3, [r7, #17]
    	SYSCFG_PCLK_EN();
 800063c:	4b5d      	ldr	r3, [pc, #372]	@ (80007b4 <GPIO_Init+0x31c>)
 800063e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000640:	4a5c      	ldr	r2, [pc, #368]	@ (80007b4 <GPIO_Init+0x31c>)
 8000642:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000646:	6453      	str	r3, [r2, #68]	@ 0x44
    	SYSCFG->EXTICR[tem1] = (portcode << (4*tem2));
 8000648:	7c7a      	ldrb	r2, [r7, #17]
 800064a:	7cbb      	ldrb	r3, [r7, #18]
 800064c:	009b      	lsls	r3, r3, #2
 800064e:	fa02 f103 	lsl.w	r1, r2, r3
 8000652:	4a59      	ldr	r2, [pc, #356]	@ (80007b8 <GPIO_Init+0x320>)
 8000654:	7cfb      	ldrb	r3, [r7, #19]
 8000656:	3302      	adds	r3, #2
 8000658:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    	//3. enable the exti interrupt delivery using IMR
    	EXTI->IMR	|=	(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800065c:	4b57      	ldr	r3, [pc, #348]	@ (80007bc <GPIO_Init+0x324>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	687a      	ldr	r2, [r7, #4]
 8000662:	7912      	ldrb	r2, [r2, #4]
 8000664:	4611      	mov	r1, r2
 8000666:	2201      	movs	r2, #1
 8000668:	408a      	lsls	r2, r1
 800066a:	4611      	mov	r1, r2
 800066c:	4a53      	ldr	r2, [pc, #332]	@ (80007bc <GPIO_Init+0x324>)
 800066e:	430b      	orrs	r3, r1
 8000670:	6013      	str	r3, [r2, #0]
    }
    temp = 0;
 8000672:	2300      	movs	r3, #0
 8000674:	617b      	str	r3, [r7, #20]

    //2. config the speed
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	799b      	ldrb	r3, [r3, #6]
 800067a:	461a      	mov	r2, r3
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	791b      	ldrb	r3, [r3, #4]
 8000680:	005b      	lsls	r3, r3, #1
 8000682:	fa02 f303 	lsl.w	r3, r2, r3
 8000686:	617b      	str	r3, [r7, #20]
    pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinMode);
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	689a      	ldr	r2, [r3, #8]
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	795b      	ldrb	r3, [r3, #5]
 8000692:	4619      	mov	r1, r3
 8000694:	2303      	movs	r3, #3
 8000696:	408b      	lsls	r3, r1
 8000698:	43db      	mvns	r3, r3
 800069a:	4619      	mov	r1, r3
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	400a      	ands	r2, r1
 80006a2:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	6899      	ldr	r1, [r3, #8]
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	697a      	ldr	r2, [r7, #20]
 80006b0:	430a      	orrs	r2, r1
 80006b2:	609a      	str	r2, [r3, #8]
    temp = 0;
 80006b4:	2300      	movs	r3, #0
 80006b6:	617b      	str	r3, [r7, #20]

    //3. config the pupd settings
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	79db      	ldrb	r3, [r3, #7]
 80006bc:	461a      	mov	r2, r3
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	791b      	ldrb	r3, [r3, #4]
 80006c2:	005b      	lsls	r3, r3, #1
 80006c4:	fa02 f303 	lsl.w	r3, r2, r3
 80006c8:	617b      	str	r3, [r7, #20]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinMode);
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	68da      	ldr	r2, [r3, #12]
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	795b      	ldrb	r3, [r3, #5]
 80006d4:	4619      	mov	r1, r3
 80006d6:	2303      	movs	r3, #3
 80006d8:	408b      	lsls	r3, r1
 80006da:	43db      	mvns	r3, r3
 80006dc:	4619      	mov	r1, r3
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	400a      	ands	r2, r1
 80006e4:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	68d9      	ldr	r1, [r3, #12]
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	697a      	ldr	r2, [r7, #20]
 80006f2:	430a      	orrs	r2, r1
 80006f4:	60da      	str	r2, [r3, #12]
    temp = 0;
 80006f6:	2300      	movs	r3, #0
 80006f8:	617b      	str	r3, [r7, #20]

    //4. config the optype
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (1*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	7a1b      	ldrb	r3, [r3, #8]
 80006fe:	461a      	mov	r2, r3
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	791b      	ldrb	r3, [r3, #4]
 8000704:	fa02 f303 	lsl.w	r3, r2, r3
 8000708:	617b      	str	r3, [r7, #20]
    pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinMode);
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	685a      	ldr	r2, [r3, #4]
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	795b      	ldrb	r3, [r3, #5]
 8000714:	4619      	mov	r1, r3
 8000716:	2301      	movs	r3, #1
 8000718:	408b      	lsls	r3, r1
 800071a:	43db      	mvns	r3, r3
 800071c:	4619      	mov	r1, r3
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	400a      	ands	r2, r1
 8000724:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	6859      	ldr	r1, [r3, #4]
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	697a      	ldr	r2, [r7, #20]
 8000732:	430a      	orrs	r2, r1
 8000734:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000736:	2300      	movs	r3, #0
 8000738:	617b      	str	r3, [r7, #20]

    //5. config the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUN)
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	795b      	ldrb	r3, [r3, #5]
 800073e:	2b02      	cmp	r3, #2
 8000740:	d131      	bne.n	80007a6 <GPIO_Init+0x30e>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	791b      	ldrb	r3, [r3, #4]
 8000746:	08db      	lsrs	r3, r3, #3
 8000748:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	791b      	ldrb	r3, [r3, #4]
 800074e:	f003 0307 	and.w	r3, r3, #7
 8000752:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4* temp2));
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	7c3a      	ldrb	r2, [r7, #16]
 800075a:	3208      	adds	r2, #8
 800075c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000760:	7bfb      	ldrb	r3, [r7, #15]
 8000762:	009b      	lsls	r3, r3, #2
 8000764:	220f      	movs	r2, #15
 8000766:	fa02 f303 	lsl.w	r3, r2, r3
 800076a:	43db      	mvns	r3, r3
 800076c:	4618      	mov	r0, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	7c3a      	ldrb	r2, [r7, #16]
 8000774:	4001      	ands	r1, r0
 8000776:	3208      	adds	r2, #8
 8000778:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_AltFunMode << ( 4 * temp2 ));
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	7c3a      	ldrb	r2, [r7, #16]
 8000782:	3208      	adds	r2, #8
 8000784:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	7a5b      	ldrb	r3, [r3, #9]
 800078c:	461a      	mov	r2, r3
 800078e:	7bfb      	ldrb	r3, [r7, #15]
 8000790:	009b      	lsls	r3, r3, #2
 8000792:	fa02 f303 	lsl.w	r3, r2, r3
 8000796:	4618      	mov	r0, r3
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	7c3a      	ldrb	r2, [r7, #16]
 800079e:	4301      	orrs	r1, r0
 80007a0:	3208      	adds	r2, #8
 80007a2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007a6:	bf00      	nop
 80007a8:	371c      	adds	r7, #28
 80007aa:	46bd      	mov	sp, r7
 80007ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b0:	4770      	bx	lr
 80007b2:	bf00      	nop
 80007b4:	40023800 	.word	0x40023800
 80007b8:	40013800 	.word	0x40013800
 80007bc:	40013c00 	.word	0x40013c00

080007c0 <GPIO_WriteToOutputPin>:
	uint16_t value;
	value = (uint16_t)(pGPIOx->IDR);
	return value;
}
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80007c0:	b480      	push	{r7}
 80007c2:	b083      	sub	sp, #12
 80007c4:	af00      	add	r7, sp, #0
 80007c6:	6078      	str	r0, [r7, #4]
 80007c8:	460b      	mov	r3, r1
 80007ca:	70fb      	strb	r3, [r7, #3]
 80007cc:	4613      	mov	r3, r2
 80007ce:	70bb      	strb	r3, [r7, #2]
	if(Value == GPIO_PIN_SET)
 80007d0:	78bb      	ldrb	r3, [r7, #2]
 80007d2:	2b01      	cmp	r3, #1
 80007d4:	d109      	bne.n	80007ea <GPIO_WriteToOutputPin+0x2a>
	{
		pGPIOx->ODR |= (1 << PinNumber);
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	695b      	ldr	r3, [r3, #20]
 80007da:	78fa      	ldrb	r2, [r7, #3]
 80007dc:	2101      	movs	r1, #1
 80007de:	fa01 f202 	lsl.w	r2, r1, r2
 80007e2:	431a      	orrs	r2, r3
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	615a      	str	r2, [r3, #20]
	}else
	{
		pGPIOx->ODR &= ~(1 << PinNumber);
	}
}
 80007e8:	e009      	b.n	80007fe <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	695b      	ldr	r3, [r3, #20]
 80007ee:	78fa      	ldrb	r2, [r7, #3]
 80007f0:	2101      	movs	r1, #1
 80007f2:	fa01 f202 	lsl.w	r2, r1, r2
 80007f6:	43d2      	mvns	r2, r2
 80007f8:	401a      	ands	r2, r3
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	615a      	str	r2, [r3, #20]
}
 80007fe:	bf00      	nop
 8000800:	370c      	adds	r7, #12
 8000802:	46bd      	mov	sp, r7
 8000804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000808:	4770      	bx	lr

0800080a <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800080a:	b480      	push	{r7}
 800080c:	b083      	sub	sp, #12
 800080e:	af00      	add	r7, sp, #0
 8000810:	6078      	str	r0, [r7, #4]
 8000812:	460b      	mov	r3, r1
 8000814:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	695b      	ldr	r3, [r3, #20]
 800081a:	78fa      	ldrb	r2, [r7, #3]
 800081c:	2101      	movs	r1, #1
 800081e:	fa01 f202 	lsl.w	r2, r1, r2
 8000822:	405a      	eors	r2, r3
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	615a      	str	r2, [r3, #20]
}
 8000828:	bf00      	nop
 800082a:	370c      	adds	r7, #12
 800082c:	46bd      	mov	sp, r7
 800082e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000832:	4770      	bx	lr

08000834 <GPIO_IRQInterruptConfig>:

/*
 *  IRQ config and ISR Handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000834:	b480      	push	{r7}
 8000836:	b083      	sub	sp, #12
 8000838:	af00      	add	r7, sp, #0
 800083a:	4603      	mov	r3, r0
 800083c:	460a      	mov	r2, r1
 800083e:	71fb      	strb	r3, [r7, #7]
 8000840:	4613      	mov	r3, r2
 8000842:	71bb      	strb	r3, [r7, #6]
	if(EnorDi==ENABLE)
 8000844:	79bb      	ldrb	r3, [r7, #6]
 8000846:	2b01      	cmp	r3, #1
 8000848:	d133      	bne.n	80008b2 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31) /*0 -> 31*/
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b1f      	cmp	r3, #31
 800084e:	d80a      	bhi.n	8000866 <GPIO_IRQInterruptConfig+0x32>
		{
			//	program ISER0 register
            *NVIC_ISER0 |= (1 << IRQNumber );
 8000850:	4b35      	ldr	r3, [pc, #212]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	79fa      	ldrb	r2, [r7, #7]
 8000856:	2101      	movs	r1, #1
 8000858:	fa01 f202 	lsl.w	r2, r1, r2
 800085c:	4611      	mov	r1, r2
 800085e:	4a32      	ldr	r2, [pc, #200]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 8000860:	430b      	orrs	r3, r1
 8000862:	6013      	str	r3, [r2, #0]
		{
			//	program ISER2 register
            *NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 8000864:	e059      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64) /*32 -> 63*/
 8000866:	79fb      	ldrb	r3, [r7, #7]
 8000868:	2b1f      	cmp	r3, #31
 800086a:	d90f      	bls.n	800088c <GPIO_IRQInterruptConfig+0x58>
 800086c:	79fb      	ldrb	r3, [r7, #7]
 800086e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000870:	d80c      	bhi.n	800088c <GPIO_IRQInterruptConfig+0x58>
            *NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000872:	4b2e      	ldr	r3, [pc, #184]	@ (800092c <GPIO_IRQInterruptConfig+0xf8>)
 8000874:	681b      	ldr	r3, [r3, #0]
 8000876:	79fa      	ldrb	r2, [r7, #7]
 8000878:	f002 021f 	and.w	r2, r2, #31
 800087c:	2101      	movs	r1, #1
 800087e:	fa01 f202 	lsl.w	r2, r1, r2
 8000882:	4611      	mov	r1, r2
 8000884:	4a29      	ldr	r2, [pc, #164]	@ (800092c <GPIO_IRQInterruptConfig+0xf8>)
 8000886:	430b      	orrs	r3, r1
 8000888:	6013      	str	r3, [r2, #0]
 800088a:	e046      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96)	/*64 -> 95*/
 800088c:	79fb      	ldrb	r3, [r7, #7]
 800088e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000890:	d943      	bls.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 8000892:	79fb      	ldrb	r3, [r7, #7]
 8000894:	2b5f      	cmp	r3, #95	@ 0x5f
 8000896:	d840      	bhi.n	800091a <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000898:	4b25      	ldr	r3, [pc, #148]	@ (8000930 <GPIO_IRQInterruptConfig+0xfc>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	79fa      	ldrb	r2, [r7, #7]
 800089e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80008a2:	2101      	movs	r1, #1
 80008a4:	fa01 f202 	lsl.w	r2, r1, r2
 80008a8:	4611      	mov	r1, r2
 80008aa:	4a21      	ldr	r2, [pc, #132]	@ (8000930 <GPIO_IRQInterruptConfig+0xfc>)
 80008ac:	430b      	orrs	r3, r1
 80008ae:	6013      	str	r3, [r2, #0]
}
 80008b0:	e033      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31) /*0 -> 31*/
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b1f      	cmp	r3, #31
 80008b6:	d80a      	bhi.n	80008ce <GPIO_IRQInterruptConfig+0x9a>
            *NVIC_ICER0 |= (1 << IRQNumber );
 80008b8:	4b1e      	ldr	r3, [pc, #120]	@ (8000934 <GPIO_IRQInterruptConfig+0x100>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	79fa      	ldrb	r2, [r7, #7]
 80008be:	2101      	movs	r1, #1
 80008c0:	fa01 f202 	lsl.w	r2, r1, r2
 80008c4:	4611      	mov	r1, r2
 80008c6:	4a1b      	ldr	r2, [pc, #108]	@ (8000934 <GPIO_IRQInterruptConfig+0x100>)
 80008c8:	430b      	orrs	r3, r1
 80008ca:	6013      	str	r3, [r2, #0]
}
 80008cc:	e025      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64) /*32 -> 63*/
 80008ce:	79fb      	ldrb	r3, [r7, #7]
 80008d0:	2b1f      	cmp	r3, #31
 80008d2:	d90f      	bls.n	80008f4 <GPIO_IRQInterruptConfig+0xc0>
 80008d4:	79fb      	ldrb	r3, [r7, #7]
 80008d6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008d8:	d80c      	bhi.n	80008f4 <GPIO_IRQInterruptConfig+0xc0>
            *NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80008da:	4b17      	ldr	r3, [pc, #92]	@ (8000938 <GPIO_IRQInterruptConfig+0x104>)
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	79fa      	ldrb	r2, [r7, #7]
 80008e0:	f002 021f 	and.w	r2, r2, #31
 80008e4:	2101      	movs	r1, #1
 80008e6:	fa01 f202 	lsl.w	r2, r1, r2
 80008ea:	4611      	mov	r1, r2
 80008ec:	4a12      	ldr	r2, [pc, #72]	@ (8000938 <GPIO_IRQInterruptConfig+0x104>)
 80008ee:	430b      	orrs	r3, r1
 80008f0:	6013      	str	r3, [r2, #0]
 80008f2:	e012      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96)	/*64 -> 95*/
 80008f4:	79fb      	ldrb	r3, [r7, #7]
 80008f6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008f8:	d90f      	bls.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 80008fa:	79fb      	ldrb	r3, [r7, #7]
 80008fc:	2b5f      	cmp	r3, #95	@ 0x5f
 80008fe:	d80c      	bhi.n	800091a <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000900:	4b0e      	ldr	r3, [pc, #56]	@ (800093c <GPIO_IRQInterruptConfig+0x108>)
 8000902:	681b      	ldr	r3, [r3, #0]
 8000904:	79fa      	ldrb	r2, [r7, #7]
 8000906:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800090a:	2101      	movs	r1, #1
 800090c:	fa01 f202 	lsl.w	r2, r1, r2
 8000910:	4611      	mov	r1, r2
 8000912:	4a0a      	ldr	r2, [pc, #40]	@ (800093c <GPIO_IRQInterruptConfig+0x108>)
 8000914:	430b      	orrs	r3, r1
 8000916:	6013      	str	r3, [r2, #0]
}
 8000918:	e7ff      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 800091a:	bf00      	nop
 800091c:	370c      	adds	r7, #12
 800091e:	46bd      	mov	sp, r7
 8000920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000924:	4770      	bx	lr
 8000926:	bf00      	nop
 8000928:	e000e100 	.word	0xe000e100
 800092c:	e000e104 	.word	0xe000e104
 8000930:	e000e108 	.word	0xe000e108
 8000934:	e000e180 	.word	0xe000e180
 8000938:	e000e184 	.word	0xe000e184
 800093c:	e000e188 	.word	0xe000e188

08000940 <GPIO_IRQPriorityConfig>:
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000940:	b480      	push	{r7}
 8000942:	b085      	sub	sp, #20
 8000944:	af00      	add	r7, sp, #0
 8000946:	4603      	mov	r3, r0
 8000948:	6039      	str	r1, [r7, #0]
 800094a:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 800094c:	79fb      	ldrb	r3, [r7, #7]
 800094e:	089b      	lsrs	r3, r3, #2
 8000950:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000952:	79fb      	ldrb	r3, [r7, #7]
 8000954:	f003 0303 	and.w	r3, r3, #3
 8000958:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8*iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 800095a:	7bbb      	ldrb	r3, [r7, #14]
 800095c:	00db      	lsls	r3, r3, #3
 800095e:	b2db      	uxtb	r3, r3
 8000960:	3304      	adds	r3, #4
 8000962:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000964:	7bfb      	ldrb	r3, [r7, #15]
 8000966:	009b      	lsls	r3, r3, #2
 8000968:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 800096c:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000970:	6819      	ldr	r1, [r3, #0]
 8000972:	7b7b      	ldrb	r3, [r7, #13]
 8000974:	683a      	ldr	r2, [r7, #0]
 8000976:	409a      	lsls	r2, r3
 8000978:	7bfb      	ldrb	r3, [r7, #15]
 800097a:	009b      	lsls	r3, r3, #2
 800097c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000980:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000984:	430a      	orrs	r2, r1
 8000986:	601a      	str	r2, [r3, #0]
}
 8000988:	bf00      	nop
 800098a:	3714      	adds	r7, #20
 800098c:	46bd      	mov	sp, r7
 800098e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000992:	4770      	bx	lr

08000994 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000994:	b480      	push	{r7}
 8000996:	b083      	sub	sp, #12
 8000998:	af00      	add	r7, sp, #0
 800099a:	4603      	mov	r3, r0
 800099c:	71fb      	strb	r3, [r7, #7]
    /* Clear the PR register corresponding to pin number */
    if(EXTI->PR & (1 << PinNumber))
 800099e:	4b0c      	ldr	r3, [pc, #48]	@ (80009d0 <GPIO_IRQHandling+0x3c>)
 80009a0:	695b      	ldr	r3, [r3, #20]
 80009a2:	79fa      	ldrb	r2, [r7, #7]
 80009a4:	2101      	movs	r1, #1
 80009a6:	fa01 f202 	lsl.w	r2, r1, r2
 80009aa:	4013      	ands	r3, r2
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	d009      	beq.n	80009c4 <GPIO_IRQHandling+0x30>
    {
        /* Clear pin */
        EXTI->PR |= (1 << PinNumber);
 80009b0:	4b07      	ldr	r3, [pc, #28]	@ (80009d0 <GPIO_IRQHandling+0x3c>)
 80009b2:	695b      	ldr	r3, [r3, #20]
 80009b4:	79fa      	ldrb	r2, [r7, #7]
 80009b6:	2101      	movs	r1, #1
 80009b8:	fa01 f202 	lsl.w	r2, r1, r2
 80009bc:	4611      	mov	r1, r2
 80009be:	4a04      	ldr	r2, [pc, #16]	@ (80009d0 <GPIO_IRQHandling+0x3c>)
 80009c0:	430b      	orrs	r3, r1
 80009c2:	6153      	str	r3, [r2, #20]
    }
}
 80009c4:	bf00      	nop
 80009c6:	370c      	adds	r7, #12
 80009c8:	46bd      	mov	sp, r7
 80009ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ce:	4770      	bx	lr
 80009d0:	40013c00 	.word	0x40013c00

080009d4 <memset>:
 80009d4:	4402      	add	r2, r0
 80009d6:	4603      	mov	r3, r0
 80009d8:	4293      	cmp	r3, r2
 80009da:	d100      	bne.n	80009de <memset+0xa>
 80009dc:	4770      	bx	lr
 80009de:	f803 1b01 	strb.w	r1, [r3], #1
 80009e2:	e7f9      	b.n	80009d8 <memset+0x4>

080009e4 <__libc_init_array>:
 80009e4:	b570      	push	{r4, r5, r6, lr}
 80009e6:	4d0d      	ldr	r5, [pc, #52]	@ (8000a1c <__libc_init_array+0x38>)
 80009e8:	4c0d      	ldr	r4, [pc, #52]	@ (8000a20 <__libc_init_array+0x3c>)
 80009ea:	1b64      	subs	r4, r4, r5
 80009ec:	10a4      	asrs	r4, r4, #2
 80009ee:	2600      	movs	r6, #0
 80009f0:	42a6      	cmp	r6, r4
 80009f2:	d109      	bne.n	8000a08 <__libc_init_array+0x24>
 80009f4:	4d0b      	ldr	r5, [pc, #44]	@ (8000a24 <__libc_init_array+0x40>)
 80009f6:	4c0c      	ldr	r4, [pc, #48]	@ (8000a28 <__libc_init_array+0x44>)
 80009f8:	f000 f818 	bl	8000a2c <_init>
 80009fc:	1b64      	subs	r4, r4, r5
 80009fe:	10a4      	asrs	r4, r4, #2
 8000a00:	2600      	movs	r6, #0
 8000a02:	42a6      	cmp	r6, r4
 8000a04:	d105      	bne.n	8000a12 <__libc_init_array+0x2e>
 8000a06:	bd70      	pop	{r4, r5, r6, pc}
 8000a08:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a0c:	4798      	blx	r3
 8000a0e:	3601      	adds	r6, #1
 8000a10:	e7ee      	b.n	80009f0 <__libc_init_array+0xc>
 8000a12:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a16:	4798      	blx	r3
 8000a18:	3601      	adds	r6, #1
 8000a1a:	e7f2      	b.n	8000a02 <__libc_init_array+0x1e>
 8000a1c:	08000a44 	.word	0x08000a44
 8000a20:	08000a44 	.word	0x08000a44
 8000a24:	08000a44 	.word	0x08000a44
 8000a28:	08000a48 	.word	0x08000a48

08000a2c <_init>:
 8000a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2e:	bf00      	nop
 8000a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a32:	bc08      	pop	{r3}
 8000a34:	469e      	mov	lr, r3
 8000a36:	4770      	bx	lr

08000a38 <_fini>:
 8000a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3a:	bf00      	nop
 8000a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a3e:	bc08      	pop	{r3}
 8000a40:	469e      	mov	lr, r3
 8000a42:	4770      	bx	lr
