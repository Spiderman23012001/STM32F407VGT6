
MCU_Clock_tree.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a4  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800032c  08000334  00001334  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800032c  0800032c  00001334  2**0
                  CONTENTS
  4 .ARM          00000000  0800032c  0800032c  00001334  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800032c  08000334  00001334  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800032c  0800032c  0000132c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000330  08000330  00001330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001334  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001334  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001334  2**0
                  CONTENTS, READONLY
 13 .debug_info   000000ef  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000095  00000000  00000000  00001453  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000058  00000000  00000000  000014e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000038  00000000  00000000  00001540  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000fa0  00000000  00000000  00001578  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000004e1  00000000  00000000  00002518  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003d05  00000000  00000000  000029f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000066fe  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000098  00000000  00000000  00006744  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000055  00000000  00000000  000067dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000314 	.word	0x08000314

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000314 	.word	0x08000314

080001c8 <config_Clock>:
/********************** C·∫§U H√åNH PRESCALER MCO1 ********************/
#define MCO1_PRESCALER	(0x6 << 24)			// Devision by 4 (110 << 24)

/********************** H√ÄM C·∫§U H√åNH CLOCK *****************************/
void config_Clock(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0
	// üî¥ B∆∞·ªõc 1: B·∫≠t clock cho GPIOA (AHB1ENR bit 0)
	*((volatile uint32_t *) RCC_AHB1ENR) |= (1 << 0);
 80001cc:	4b0e      	ldr	r3, [pc, #56]	@ (8000208 <config_Clock+0x40>)
 80001ce:	681b      	ldr	r3, [r3, #0]
 80001d0:	4a0d      	ldr	r2, [pc, #52]	@ (8000208 <config_Clock+0x40>)
 80001d2:	f043 0301 	orr.w	r3, r3, #1
 80001d6:	6013      	str	r3, [r2, #0]
	// üî¥ B∆∞·ªõc 2: Clear bit c·∫•u h√¨nh MCO1 c≈© (bit 21-22)
	*((volatile uint32_t *)RCC_CFGR) &= ~(0x3 << 21);
 80001d8:	4b0c      	ldr	r3, [pc, #48]	@ (800020c <config_Clock+0x44>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	4a0b      	ldr	r2, [pc, #44]	@ (800020c <config_Clock+0x44>)
 80001de:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 80001e2:	6013      	str	r3, [r2, #0]
	// üî¥ B∆∞·ªõc 3: Set HSI l√†m ngu·ªìn cho MCO1 (00 << 21 - m·∫∑c ƒë·ªãnh)
//	*((volatile uint32_t *)RCC_CFGR) |= (0x0 << 21);
	// üî¥ B∆∞·ªõc 4: Clear prescaler c≈© (bit 24-26)
	*((volatile uint32_t *)RCC_CFGR) &= ~(0x7 << 24);
 80001e4:	4b09      	ldr	r3, [pc, #36]	@ (800020c <config_Clock+0x44>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a08      	ldr	r2, [pc, #32]	@ (800020c <config_Clock+0x44>)
 80001ea:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80001ee:	6013      	str	r3, [r2, #0]
	// üî¥ B∆∞·ªõc 5: √Åp d·ª•ng prescaler m·ªõi (chia 4)
	*((volatile uint32_t *)RCC_CFGR) |= MCO1_PRESCALER;
 80001f0:	4b06      	ldr	r3, [pc, #24]	@ (800020c <config_Clock+0x44>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a05      	ldr	r2, [pc, #20]	@ (800020c <config_Clock+0x44>)
 80001f6:	f043 63c0 	orr.w	r3, r3, #100663296	@ 0x6000000
 80001fa:	6013      	str	r3, [r2, #0]
}
 80001fc:	bf00      	nop
 80001fe:	46bd      	mov	sp, r7
 8000200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000204:	4770      	bx	lr
 8000206:	bf00      	nop
 8000208:	40023830 	.word	0x40023830
 800020c:	40023808 	.word	0x40023808

08000210 <config_gpio>:

/********************** H√ÄM C·∫§U H√åNH GPIOA ************************/
void config_gpio(void)
{
 8000210:	b480      	push	{r7}
 8000212:	af00      	add	r7, sp, #0
	// B∆∞·ªõc 1: set mode
	*((volatile uint32_t *) GPIOA_MODER) &= ~(0x3 << 16);
 8000214:	4b11      	ldr	r3, [pc, #68]	@ (800025c <config_gpio+0x4c>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a10      	ldr	r2, [pc, #64]	@ (800025c <config_gpio+0x4c>)
 800021a:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800021e:	6013      	str	r3, [r2, #0]
	*((volatile uint32_t *) GPIOA_MODER) |= (0x2 << 16);
 8000220:	4b0e      	ldr	r3, [pc, #56]	@ (800025c <config_gpio+0x4c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a0d      	ldr	r2, [pc, #52]	@ (800025c <config_gpio+0x4c>)
 8000226:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800022a:	6013      	str	r3, [r2, #0]
	// B∆∞·ªõc 2: set speed for PA8
	*((volatile uint32_t *) GPIOA_OSPEEDR) &= ~(0x3 << 16);
 800022c:	4b0c      	ldr	r3, [pc, #48]	@ (8000260 <config_gpio+0x50>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a0b      	ldr	r2, [pc, #44]	@ (8000260 <config_gpio+0x50>)
 8000232:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8000236:	6013      	str	r3, [r2, #0]
	*((volatile uint32_t *) GPIOA_OSPEEDR) |= (0x2 << 16);
 8000238:	4b09      	ldr	r3, [pc, #36]	@ (8000260 <config_gpio+0x50>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a08      	ldr	r2, [pc, #32]	@ (8000260 <config_gpio+0x50>)
 800023e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000242:	6013      	str	r3, [r2, #0]
	// B∆∞·ªõc 3: set AF0 for pin PA8
	*((volatile uint32_t *) GPIOA_AFRH) &= ~(0x3 << 16);
 8000244:	4b07      	ldr	r3, [pc, #28]	@ (8000264 <config_gpio+0x54>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a06      	ldr	r2, [pc, #24]	@ (8000264 <config_gpio+0x54>)
 800024a:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800024e:	6013      	str	r3, [r2, #0]
//	*((volatile uint32_t *) GPIOA_AFRH) |= (0x0 << 16);

}
 8000250:	bf00      	nop
 8000252:	46bd      	mov	sp, r7
 8000254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000258:	4770      	bx	lr
 800025a:	bf00      	nop
 800025c:	40020000 	.word	0x40020000
 8000260:	40020008 	.word	0x40020008
 8000264:	40020024 	.word	0x40020024

08000268 <main>:

int main(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	config_Clock();
 800026c:	f7ff ffac 	bl	80001c8 <config_Clock>
	config_gpio();
 8000270:	f7ff ffce 	bl	8000210 <config_gpio>
    /* Loop forever */
	for(;;);
 8000274:	bf00      	nop
 8000276:	e7fd      	b.n	8000274 <main+0xc>

08000278 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000278:	480d      	ldr	r0, [pc, #52]	@ (80002b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800027c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000280:	480c      	ldr	r0, [pc, #48]	@ (80002b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000282:	490d      	ldr	r1, [pc, #52]	@ (80002b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000284:	4a0d      	ldr	r2, [pc, #52]	@ (80002bc <LoopForever+0xe>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000288:	e002      	b.n	8000290 <LoopCopyDataInit>

0800028a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800028c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028e:	3304      	adds	r3, #4

08000290 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000290:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000292:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000294:	d3f9      	bcc.n	800028a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000296:	4a0a      	ldr	r2, [pc, #40]	@ (80002c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000298:	4c0a      	ldr	r4, [pc, #40]	@ (80002c4 <LoopForever+0x16>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800029c:	e001      	b.n	80002a2 <LoopFillZerobss>

0800029e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a0:	3204      	adds	r2, #4

080002a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a4:	d3fb      	bcc.n	800029e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002a6:	f000 f811 	bl	80002cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002aa:	f7ff ffdd 	bl	8000268 <main>

080002ae <LoopForever>:

LoopForever:
  b LoopForever
 80002ae:	e7fe      	b.n	80002ae <LoopForever>
  ldr   r0, =_estack
 80002b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002bc:	08000334 	.word	0x08000334
  ldr r2, =_sbss
 80002c0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c4:	2000001c 	.word	0x2000001c

080002c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c8:	e7fe      	b.n	80002c8 <ADC_IRQHandler>
	...

080002cc <__libc_init_array>:
 80002cc:	b570      	push	{r4, r5, r6, lr}
 80002ce:	4d0d      	ldr	r5, [pc, #52]	@ (8000304 <__libc_init_array+0x38>)
 80002d0:	4c0d      	ldr	r4, [pc, #52]	@ (8000308 <__libc_init_array+0x3c>)
 80002d2:	1b64      	subs	r4, r4, r5
 80002d4:	10a4      	asrs	r4, r4, #2
 80002d6:	2600      	movs	r6, #0
 80002d8:	42a6      	cmp	r6, r4
 80002da:	d109      	bne.n	80002f0 <__libc_init_array+0x24>
 80002dc:	4d0b      	ldr	r5, [pc, #44]	@ (800030c <__libc_init_array+0x40>)
 80002de:	4c0c      	ldr	r4, [pc, #48]	@ (8000310 <__libc_init_array+0x44>)
 80002e0:	f000 f818 	bl	8000314 <_init>
 80002e4:	1b64      	subs	r4, r4, r5
 80002e6:	10a4      	asrs	r4, r4, #2
 80002e8:	2600      	movs	r6, #0
 80002ea:	42a6      	cmp	r6, r4
 80002ec:	d105      	bne.n	80002fa <__libc_init_array+0x2e>
 80002ee:	bd70      	pop	{r4, r5, r6, pc}
 80002f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f4:	4798      	blx	r3
 80002f6:	3601      	adds	r6, #1
 80002f8:	e7ee      	b.n	80002d8 <__libc_init_array+0xc>
 80002fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80002fe:	4798      	blx	r3
 8000300:	3601      	adds	r6, #1
 8000302:	e7f2      	b.n	80002ea <__libc_init_array+0x1e>
 8000304:	0800032c 	.word	0x0800032c
 8000308:	0800032c 	.word	0x0800032c
 800030c:	0800032c 	.word	0x0800032c
 8000310:	08000330 	.word	0x08000330

08000314 <_init>:
 8000314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000316:	bf00      	nop
 8000318:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031a:	bc08      	pop	{r3}
 800031c:	469e      	mov	lr, r3
 800031e:	4770      	bx	lr

08000320 <_fini>:
 8000320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000322:	bf00      	nop
 8000324:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000326:	bc08      	pop	{r3}
 8000328:	469e      	mov	lr, r3
 800032a:	4770      	bx	lr
